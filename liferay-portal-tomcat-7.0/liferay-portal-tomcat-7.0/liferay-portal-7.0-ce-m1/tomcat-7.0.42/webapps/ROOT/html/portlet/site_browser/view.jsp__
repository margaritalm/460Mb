 package PackageNo604038016;import _html_portlet_init_jsp;import _html_portlet_site_browser_init_ext_jsp;import com.liferay.portlet.assetpublisher.util.AssetPublisherUtil; public class view_jsp {  /* 1 */ private List<Group> _filterGroups(List<Group> groups, String filter) throws Exception { /* 230 */ 	List<Group> filteredGroups = new ArrayList(); /* 231 */ 	for (Group group : groups) { /* 233 */ 		if (filter.equals("contentSharingWithChildrenEnabled") && SitesUtil.isContentSharingWithChildrenEnabled(group)) { /* 234 */ 			filteredGroups.add(group); /* 235 */ 		} /* 236 */ 	} /* 237 */ 	return filteredGroups; /* 239 */ } /* 240 */  public void Checkmarx_Class_Init(HttpServletRequest request, HttpServletResponse response, HttpSession session, ServletContext application, PageContext pageContext) {jspInit();















/* ?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\view.jsp */ /* 17?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\view.jsp */ /* 1?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 2?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 3?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 4?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 5?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 6?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 7?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 8?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 9?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 10?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 11?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 12?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 13?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 14?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 15?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 16?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 17?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 18?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 19?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 20?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 21?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ boolean filterManageableGroups = true; /* 22?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 23?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ if (permissionChecker.isCompanyAdmin()) { /* 24?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ 	filterManageableGroups = false; /* 25?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ } /* 26?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 27?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 28?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ /* 29?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\init.jsp */ response.write(CxResponseWrite)+response.write(request.getAttribute("CxResponseWrite")); /* 17?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\portlet\site_browser\view.jsp */

     
     long groupId = ParamUtil.getLong(request, "groupId");
     long[] selectedGroupIds = StringUtil.split(ParamUtil.getString(request, "selectedGroupIds"), 0L);
     
     String type = ParamUtil.getString(request, "type");
     String[] types = ParamUtil.getParameterValues(request, "types");
     
     if (Validator.isNull(type)) {
     	if (types.length > 0) {
     		type = types[0];
     	}
     	else {
     		type = "sites-that-i-administer";
     	}
     }
     
     if (types.length == 0) {
     	types = new String[] {type};
     }
     
     String filter = ParamUtil.getString(request, "filter");
     boolean includeCompany = ParamUtil.getBoolean(request, "includeCompany");
     boolean includeUserPersonalSite = ParamUtil.getBoolean(request, "includeUserPersonalSite");
     String eventName = ParamUtil.getString(request, "eventName", liferayPortletResponse.getNamespace() + "selectSite");
     String target = ParamUtil.getString(request, "target");
     
     PortletURL portletURL = renderResponse.createRenderURL();
     
     portletURL.setParameter("struts_action", "/site_browser/view");
     portletURL.setParameter("groupId", String.valueOf(groupId));
     portletURL.setParameter("selectedGroupIds", StringUtil.merge(selectedGroupIds));
     portletURL.setParameter("type", type);
     portletURL.setParameter("types", types);
     portletURL.setParameter("filter", filter);
     portletURL.setParameter("includeCompany", String.valueOf(includeCompany));
     portletURL.setParameter("includeUserPersonalSite", String.valueOf(includeUserPersonalSite));
     portletURL.setParameter("eventName", eventName);
     portletURL.setParameter("target", target);
     



     response.write( new GroupSearch(renderRequest, portletURL) );






   
     						for (String curType : types) {
     							portletURL.setParameter("type", curType);
     						

     response.write( portletURL.toString() );response.write( curType )+response.write(request.getAttribute(" curType "));response.write( curType.equals(type) );

   
     						}
     						





response.write( searchContainer )+response.write(request.getAttribute(" searchContainer "));




       
     		GroupSearchTerms searchTerms = (GroupSearchTerms)searchContainer.getSearchTerms();
     
     		LinkedHashMap<String, Object> groupParams = new LinkedHashMap<String, Object>();
     		




     			results.clear();
     
     			int additionalSites = 0;
     
     			if (includeCompany) {
     				if (searchContainer.getStart() == 0) {
     					results.add(company.getGroup());
     				}
     
     				additionalSites++;
     			}
     
     			if (includeUserPersonalSite) {
     				if (searchContainer.getStart() == 0) {
     					Group userPersonalSite = GroupLocalServiceUtil.getGroup(company.getCompanyId(), GroupConstants.USER_PERSONAL_SITE);
     
     					results.add(userPersonalSite);
     				}
     
     				additionalSites++;
     			}
     
     			if (type.equals("child-sites")) {
     				Group parentGroup = GroupLocalServiceUtil.getGroup(groupId);
     
     				List<Group> parentGroups = new ArrayList<Group>();
     
     				parentGroups.add(parentGroup);
     
     				groupParams.put("groupsTree", parentGroups);
     			}
     			else if (filterManageableGroups) {
     				groupParams.put("usersGroups", user.getUserId());
     			}
     
     			groupParams.put("site", Boolean.TRUE);
     
     			if (type.equals("layoutScopes")) {
     				total = GroupLocalServiceUtil.getGroupsCount(company.getCompanyId(), Layout.class.getName(), groupId);
     			}
     			else if (type.equals("parent-sites")) {
     			}
     			else if (searchTerms.isAdvancedSearch()) {
     				total = GroupLocalServiceUtil.searchCount(company.getCompanyId(), null, searchTerms.getName(), searchTerms.getDescription(), groupParams, searchTerms.isAndOperator());
     			}
     			else {
     				total = GroupLocalServiceUtil.searchCount(company.getCompanyId(), null, searchTerms.getKeywords(), groupParams, searchTerms.isAndOperator());
     			}
     
     			total += additionalSites;
     
     			searchContainer.setTotal(total);
     
     			int start = searchContainer.getStart();
     
     			if (searchContainer.getStart() > additionalSites) {
     				start = searchContainer.getStart() - additionalSites;
     			}
     
     			int end = searchContainer.getEnd() - additionalSites;
     
     			List<Group> groups = null;
     
     			if (type.equals("layoutScopes")) {
     				groups = GroupLocalServiceUtil.getGroups(company.getCompanyId(), Layout.class.getName(), groupId, start, end);
     			}
     			else if (type.equals("parent-sites")) {
     				Group group = GroupLocalServiceUtil.getGroup(groupId);
     
     				groups = group.getAncestors();
     
     				if (Validator.isNotNull(filter)) {
     					groups = _filterGroups(groups, filter);
     				}
     
     				total = groups.size();
     
     				total += additionalSites;
     
     				searchContainer.setTotal(total);
     			}
     			else if (searchTerms.isAdvancedSearch()) {
     				groups = GroupLocalServiceUtil.search(company.getCompanyId(), null, searchTerms.getName(), searchTerms.getDescription(), groupParams, searchTerms.isAndOperator(), start, end, searchContainer.getOrderByComparator());
     			}
     			else {
     				groups = GroupLocalServiceUtil.search(company.getCompanyId(), null, searchTerms.getKeywords(), groupParams, start, end, searchContainer.getOrderByComparator());
     			}
     
     			results.addAll(groups);
     
     			searchContainer.setResults(results);
     			





   response.write( true )+response.write(request.getAttribute(" true "));






     response.write( HtmlUtil.escape(group.getDescriptiveName(locale)) )+response.write(request.getAttribute(" HtmlUtil").escape(group.getDescriptiveName(locale)) );




     response.write( LanguageUtil.get(request, group.getScopeLabel(themeDisplay)) )+response.write(request.getAttribute(" LanguageUtil").get(request, group.getScopeLabel(themeDisplay)) );




 
     				Map<String, Object> data = new HashMap<String, Object>();
     
     				data.put("groupdescriptivename", group.getDescriptiveName(locale));
     				data.put("groupid", group.getGroupId());
     				data.put("scopeid", AssetPublisherUtil.getScopeId(group, scopeGroupId));
     				data.put("target", target);
     				

























   response.write( HtmlUtil.escapeJS(eventName) );
}

}
