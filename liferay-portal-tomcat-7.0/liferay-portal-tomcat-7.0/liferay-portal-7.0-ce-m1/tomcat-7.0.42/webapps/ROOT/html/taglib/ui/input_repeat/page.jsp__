 package PackageNo1109053929;import _html_taglib_init_jsp;import com.liferay.portal.kernel.cal.DayAndPosition;import com.liferay.portlet.calendar.model.CalEvent; public class page_jsp {  /* 1 */ private boolean _getWeeklyDayPos(HttpServletRequest req, int day, CalEvent event, Recurrence recurrence) { /* 399 */ 	boolean weeklyPos = ParamUtil.getBoolean(req, "weeklyDayPos" + day); /* 400 */ 	String weeklyPosParam = ParamUtil.getString(req, "weeklyDayPos" + day); /* 402 */ 	if (Validator.isNull(weeklyPosParam) && (event != null)) { /* 404 */ 		if (event.getRepeating() && (recurrence != null)) { /* 405 */ 			DayAndPosition[] dayPositions = recurrence.getByDay(); /* 406 */ 			if (dayPositions != null) { /* 408 */ 				for (int i = 0; i < dayPositions.length; i++) { /* 409 */ 					if (dayPositions[i].getDayOfWeek() == day) { /* 410 */ 						return true; /* 411 */ 					} /* 412 */ 				} /* 413 */ 			} /* 414 */ 		} /* 415 */ 	} /* 416 */ 	return weeklyPos; /* 418 */ } /* 419 */  public void Checkmarx_Class_Init(HttpServletRequest request, HttpServletResponse response, HttpSession session, ServletContext application, PageContext pageContext) {jspInit();















/* ?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\page.jsp */ /* 17?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\page.jsp */ /* 1?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 2?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 3?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 4?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 5?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 6?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 7?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 8?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 9?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 10?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 11?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 12?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 13?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 14?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 15?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 16?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 17?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 18?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 19?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ /* 20?inc?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\init.jsp */ response.write(CxResponseWrite)+response.write(request.getAttribute("CxResponseWrite")); /* 17?c:\cxsrc\_LANGUAGES_\Java\500_1m\liferay-portal-tomcat-7.0\liferay-portal-7.0-ce-m1\tomcat-7.0.42\webapps\ROOT\html\taglib\ui\input_repeat\page.jsp */

     
     String cssClass = GetterUtil.getString((String)request.getAttribute("liferay-ui:input-repeat:cssClass"));
     
     CalEvent event = (CalEvent)request.getAttribute("liferay-ui:input-repeat:event");
     
     Recurrence recurrence = null;
     
     int recurrenceType = ParamUtil.getInteger(request, "recurrenceType", Recurrence.NO_RECURRENCE);
     String recurrenceTypeParam = ParamUtil.getString(request, "recurrenceType");
     if (Validator.isNull(recurrenceTypeParam) && (event != null)) {
     	if (event.getRepeating()) {
     		recurrence = event.getRecurrenceObj();
     		recurrenceType = recurrence.getFrequency();
     	}
     }
     
     int dailyType = ParamUtil.getInteger(request, "dailyType");
     String dailyTypeParam = ParamUtil.getString(request, "dailyType");
     if (Validator.isNull(dailyTypeParam) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		if (recurrence.getByDay() != null) {
     			dailyType = 1;
     		}
     	}
     }
     
     int dailyInterval = ParamUtil.getInteger(request, "dailyInterval", 1);
     String dailyIntervalParam = ParamUtil.getString(request, "dailyInterval");
     if (Validator.isNull(dailyIntervalParam) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		dailyInterval = recurrence.getInterval();
     	}
     }
     
     int weeklyInterval = ParamUtil.getInteger(request, "weeklyInterval", 1);
     String weeklyIntervalParam = ParamUtil.getString(request, "weeklyInterval");
     if (Validator.isNull(weeklyIntervalParam) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		weeklyInterval = recurrence.getInterval();
     	}
     }
     
     int monthlyType = ParamUtil.getInteger(request, "monthlyType");
     String monthlyTypeParam = ParamUtil.getString(request, "monthlyType");
     if (Validator.isNull(monthlyTypeParam) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		if (recurrence.getByMonthDay() == null) {
     			monthlyType = 1;
     		}
     	}
     }
     
     int monthlyDay0 = ParamUtil.getInteger(request, "monthlyDay0", 15);
     String monthlyDay0Param = ParamUtil.getString(request, "monthlyDay0");
     if (Validator.isNull(monthlyDay0Param) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		if (recurrence.getByMonthDay() != null) {
     			monthlyDay0 = recurrence.getByMonthDay()[0];
     		}
     	}
     }
     
     int monthlyInterval0 = ParamUtil.getInteger(request, "monthlyInterval0", 1);
     String monthlyInterval0Param = ParamUtil.getString(request, "monthlyInterval0");
     if (Validator.isNull(monthlyInterval0Param) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		monthlyInterval0 = recurrence.getInterval();
     	}
     }
     
     int monthlyPos = ParamUtil.getInteger(request, "monthlyPos", 1);
     String monthlyPosParam = ParamUtil.getString(request, "monthlyPos");
     if (Validator.isNull(monthlyPosParam) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		if (recurrence.getByMonth() != null) {
     			monthlyPos = recurrence.getByMonth()[0];
     		}
     		else if (recurrence.getByDay() != null) {
     			monthlyPos = recurrence.getByDay()[0].getDayPosition();
     		}
     	}
     }
     
     int monthlyDay1 = ParamUtil.getInteger(request, "monthlyDay1", Calendar.SUNDAY);
     String monthlyDay1Param = ParamUtil.getString(request, "monthlyDay1");
     if (Validator.isNull(monthlyDay1Param) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		if (recurrence.getByMonth() != null) {
     			monthlyDay1 = -1;
     		}
     		else if (recurrence.getByDay() != null) {
     			monthlyDay1 = recurrence.getByDay()[0].getDayOfWeek();
     		}
     	}
     }
     
     int monthlyInterval1 = ParamUtil.getInteger(request, "monthlyInterval1", 1);
     String monthlyInterval1Param = ParamUtil.getString(request, "monthlyInterval1");
     if (Validator.isNull(monthlyInterval1Param) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		monthlyInterval1 = recurrence.getInterval();
     	}
     }
     
     int yearlyType = ParamUtil.getInteger(request, "yearlyType");
     String yearlyTypeParam = ParamUtil.getString(request, "yearlyType");
     if (Validator.isNull(yearlyTypeParam) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		if (recurrence.getByMonthDay() == null) {
     			yearlyType = 1;
     		}
     	}
     }
     
     int yearlyMonth0 = ParamUtil.getInteger(request, "yearlyMonth0", Calendar.JANUARY);
     String yearlyMonth0Param = ParamUtil.getString(request, "yearlyMonth0");
     if (Validator.isNull(yearlyMonth0Param) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		if (recurrence.getByMonth() == null) {
     			yearlyMonth0 = recurrence.getDtStart().get(Calendar.MONTH);
     		}
     		else {
     			yearlyMonth0 = recurrence.getByMonth()[0];
     		}
     	}
     }
     
     int yearlyDay0 = ParamUtil.getInteger(request, "yearlyDay0", 15);
     String yearlyDay0Param = ParamUtil.getString(request, "yearlyDay0");
     if (Validator.isNull(yearlyDay0Param) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		if (recurrence.getByMonthDay() == null) {
     			yearlyDay0 = recurrence.getDtStart().get(Calendar.DATE);
     		}
     		else {
     			yearlyDay0 = recurrence.getByMonthDay()[0];
     		}
     	}
     }
     
     int yearlyInterval0 = ParamUtil.getInteger(request, "yearlyInterval0", 1);
     String yearlyInterval0Param = ParamUtil.getString(request, "yearlyInterval0");
     if (Validator.isNull(yearlyInterval0Param) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		yearlyInterval0 = recurrence.getInterval();
     	}
     }
     
     int yearlyPos = ParamUtil.getInteger(request, "yearlyPos", 1);
     String yearlyPosParam = ParamUtil.getString(request, "yearlyPos");
     if (Validator.isNull(yearlyPosParam) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		if (recurrence.getByDay() != null) {
     			yearlyPos = recurrence.getByDay()[0].getDayPosition();
     		}
     	}
     }
     
     int yearlyDay1 = ParamUtil.getInteger(request, "yearlyDay1", Calendar.SUNDAY);
     String yearlyDay1Param = ParamUtil.getString(request, "yearlyDay1");
     if (Validator.isNull(yearlyDay1Param) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		if (recurrence.getByDay() != null) {
     			yearlyDay1 = recurrence.getByDay()[0].getDayOfWeek();
     		}
     	}
     }
     
     int yearlyMonth1 = ParamUtil.getInteger(request, "yearlyMonth1", Calendar.JANUARY);
     String yearlyMonth1Param = ParamUtil.getString(request, "yearlyMonth1");
     if (Validator.isNull(yearlyMonth1Param) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		if (recurrence.getByMonth() != null) {
     			yearlyMonth1 = recurrence.getByMonth()[0];
     		}
     	}
     }
     
     int yearlyInterval1 = ParamUtil.getInteger(request, "yearlyInterval1", 1);
     String yearlyInterval1Param = ParamUtil.getString(request, "yearlyInterval1");
     if (Validator.isNull(yearlyInterval1Param) && (event != null)) {
     	if (event.getRepeating() && (recurrence != null)) {
     		yearlyInterval1 = recurrence.getInterval();
     	}
     }
     
     boolean weeklyPosSu = _getWeeklyDayPos(request, Calendar.SUNDAY, event, recurrence);
     boolean weeklyPosMo = _getWeeklyDayPos(request, Calendar.MONDAY, event, recurrence);
     boolean weeklyPosTu = _getWeeklyDayPos(request, Calendar.TUESDAY, event, recurrence);
     boolean weeklyPosWe = _getWeeklyDayPos(request, Calendar.WEDNESDAY, event, recurrence);
     boolean weeklyPosTh = _getWeeklyDayPos(request, Calendar.THURSDAY, event, recurrence);
     boolean weeklyPosFr = _getWeeklyDayPos(request, Calendar.FRIDAY, event, recurrence);
     boolean weeklyPosSa = _getWeeklyDayPos(request, Calendar.SATURDAY, event, recurrence);
     


































     			String[] days = CalendarUtil.getDays(locale);
     			




























































       
     		int[] monthIds = CalendarUtil.getMonthIds();
     		String[] months = CalendarUtil.getMonths(locale);
     		







 
     				for (int i = 0; i < 12; i++) {
     				



 
     				}
     				































  
     					for (int i = 0; i < 12; i++) {
     					



  
     					}
     					
}

}
